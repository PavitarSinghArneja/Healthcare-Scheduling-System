{
  "name": "Jerry Master",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1440,
        -432
      ],
      "id": "dfcd75cb-4e17-4959-90ba-0216507e210c",
      "name": "When chat message received",
      "webhookId": "fbc134bb-50c0-4ecd-94dd-e388de4348ff"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=You are a helpful assistant, depending on the user's command\n\nInput - {{ $json.chatInput }}\n\n1. If the command is related to email, use email agent tool\n2. If the command is related to calendar, use the calendar agent tool\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -960,
        -432
      ],
      "id": "dcecf647-5324-4f54-8822-81231d71bc5a",
      "name": "Master agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1216,
        -208
      ],
      "id": "618ae8aa-c48d-42cd-a3d5-73582c5eb24e",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "kBdd92TbbyHzT96c",
          "name": "Primary API"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1088,
        -208
      ],
      "id": "2afa59f3-e20a-4b7b-968a-7d6f74f60fba",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "text": "=For all the requests incoming, \n1. First fetch the User ID from GET Users call, \n2. Then GET for the list of TRANSCRIPTS as per the user query, extract transcript_id and \n3. Find the relevant transcript as per the user query from the list above and do the the GET transcript call\n\nUse the following body for the GET transcript API -\n\n{\n    \"query\": \"query Transcript($transcriptId: String!) { transcript(id: $transcriptId) { id dateString privacy analytics { sentiments { negative_pct neutral_pct positive_pct } categories { questions date_times metrics tasks } speakers { speaker_id name duration word_count longest_monologue monologues_count filler_words questions duration_pct words_per_minute } } speakers { id name } sentences { index speaker_name speaker_id text raw_text start_time end_time ai_filters { task pricing metric question date_and_time text_cleanup sentiment } } title host_email organizer_email calendar_id user { user_id email name num_transcripts recent_meeting minutes_consumed is_admin integrations } fireflies_users participants date transcript_url audio_url video_url duration meeting_attendees { displayName email phoneNumber name location } summary { keywords action_items outline shorthand_bullet overview bullet_gist gist short_summary short_overview meeting_type topics_discussed transcript_chapters } cal_id calendar_type meeting_info { fred_joined silent_meeting summary_status } apps_preview { outputs { transcript_id user_id app_id created_at title prompt response } } meeting_link } }\",\n    \"variables\": {\n      \"transcriptId\": \"<insert transcript id received from the earlier response>\"\n    }\n  }\n\n\n\nDepending on the user's command, send an email with all the info. ",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -960,
        -208
      ],
      "id": "75aa13a4-a3a9-4cdb-91bd-8de625b4bd9b",
      "name": "Meeting Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1184,
        0
      ],
      "id": "a3be3f9b-861c-4e4f-931f-9c50bec055df",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "kBdd92TbbyHzT96c",
          "name": "Primary API"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1056,
        0
      ],
      "id": "6fc86690-107c-4110-a6b5-03a5083fa62c",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.fireflies.ai/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer d03ed49f-dfb3-4a50-a0f3-3620652fc33b"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "{ users { name integrations } }"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -928,
        0
      ],
      "id": "a23d6b9b-57a9-4324-83c8-cd6c9474668a",
      "name": "Users API"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.fireflies.ai/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer d03ed49f-dfb3-4a50-a0f3-3620652fc33b"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "query Transcripts($userId: String) { transcripts(user_id: $userId) { title id } }"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -800,
        0
      ],
      "id": "87847425-906e-4282-9ca2-32766559eba5",
      "name": "List of Transcripts API"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.fireflies.ai/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer d03ed49f-dfb3-4a50-a0f3-3620652fc33b"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('JSON', ``, 'json') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -672,
        0
      ],
      "id": "15a3023f-76a5-4e30-8400-5e8c9e960aed",
      "name": "Transcript API"
    },
    {
      "parameters": {
        "sendTo": "akhi.the.techie@gmail.com",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "emailType": "text",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -544,
        0
      ],
      "id": "737dcabb-12ff-4911-bf9d-3f805d2c8be5",
      "name": "Send a message in Gmail",
      "webhookId": "68232330-bc62-497e-9df4-e284a624b4d9",
      "credentials": {
        "gmailOAuth2": {
          "id": "iBAQVPMCthEXLo3G",
          "name": "techie Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 10,
        "filters": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -160,
        0
      ],
      "id": "ab878eb3-ef7e-46bc-8805-15d2fe83e7f4",
      "name": "Get many messages in Gmail",
      "webhookId": "e2bcac8f-38dd-45ce-917a-3c6d01ba00cb",
      "credentials": {
        "gmailOAuth2": {
          "id": "iBAQVPMCthEXLo3G",
          "name": "techie Account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "emailType": "text",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -32,
        0
      ],
      "id": "1691dd21-0ea8-4b17-945f-afdb671496c0",
      "name": "Send a message in Gmail1",
      "webhookId": "9b052457-c24a-4bcd-94a6-7066664dbbf3",
      "credentials": {
        "gmailOAuth2": {
          "id": "iBAQVPMCthEXLo3G",
          "name": "techie Account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When chat message received').item.json.sessionId }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -288,
        0
      ],
      "id": "c33980ce-b174-42b3-a272-c4e2facb129e",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -416,
        0
      ],
      "id": "bb03f175-6c6f-4ced-b422-4ac359b9f65d",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "kBdd92TbbyHzT96c",
          "name": "Primary API"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Agent responsible for the Emails",
        "text": "=Based on the user's command {{ $json.chatInput }}- , perform the necessary actions\n\n1. If user asks for sendin an email, pick a send email tool and do the necessary steps\n2. If user prompts for summary, read the messages as per the tool and give the response. ",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -256,
        -208
      ],
      "id": "fc354b6e-a686-4dcf-a35f-09d2b69fe2ca",
      "name": "Email Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        96,
        0
      ],
      "id": "06324ac3-b120-46af-a74f-ad8ce4fe4632",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "kBdd92TbbyHzT96c",
          "name": "Primary API"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        224,
        0
      ],
      "id": "15872a83-f72d-4f68-a110-99fdca18f8f9",
      "name": "Simple Memory3"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "akhi.the.techie@gmail.com",
          "mode": "list",
          "cachedResultName": "akhi.the.techie@gmail.com"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        480,
        0
      ],
      "id": "07e18847-350a-4f51-aae1-580c21345e04",
      "name": "Get many events in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "hW0hm5fNItf5lvnG",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "akhi.the.techie@gmail.com",
          "mode": "list",
          "cachedResultName": "akhi.the.techie@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        352,
        0
      ],
      "id": "13bf58de-3b90-4aaf-a781-c32c7d972b36",
      "name": "Create an event in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "hW0hm5fNItf5lvnG",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "AI Agent that can can do Calendar actions",
        "text": "=Depending on the user's input {{ $('When chat message received').item.json.chatInput }} do the follwing \n\n1. If create is the command, create an event using the necessary tools\n2. If read is the command, read the events as per the user's command and use it for further uses. \n\ntoday's date is 2025 August 03",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        256,
        -208
      ],
      "id": "829a4d61-f6aa-4cf9-a0f6-f44a0bbdf750",
      "name": "Calendar Agent"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Master agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Master agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Master agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Meeting Agent": {
      "ai_tool": [
        [
          {
            "node": "Master agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Meeting Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Meeting Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Users API": {
      "ai_tool": [
        [
          {
            "node": "Meeting Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "List of Transcripts API": {
      "ai_tool": [
        [
          {
            "node": "Meeting Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Transcript API": {
      "ai_tool": [
        [
          {
            "node": "Meeting Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "Meeting Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Master agent": {
      "main": [
        []
      ]
    },
    "Get many messages in Gmail": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail1": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "Email Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Email Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Email Agent": {
      "ai_tool": [
        [
          {
            "node": "Master agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory3": {
      "ai_memory": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Create an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many events in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "Master agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": -1
  },
  "versionId": "f8bd230d-74de-4f8c-acb7-7fccf2351d3d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4b9724e65ea16d197523cb63861a1efad11f9889605b32d51cf381476212db58"
  },
  "id": "EoFWs3tuPQrWWEJZ",
  "tags": []
}